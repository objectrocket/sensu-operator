package v3

// {{ .Comment }}

import (
	"testing"

    "github.com/sensu/sensu-api-tools"
)

{{ range $index, $typename := .TypeNames }}
func TestResolve{{ $typename }}(t *testing.T) {
	var value interface{} = new({{ $typename }})
	if _, ok := value.(Resource); ok {
		raw, err := apitools.Resolve("core/v3","{{ $typename }}")
		if err != nil {
			t.Fatal(err)
		}
        resource, ok := raw.(Resource)
        if !ok {
            t.Fatal("expected Resource")
        }
		meta := resource.GetMetadata()
		if meta == nil {
			t.Fatal("nil metadata")
		}
		if meta.Labels == nil {
			t.Error("nil metadata")
		}
		if meta.Annotations == nil {
			t.Error("nil annotations")
		}
		return
	}
	_, err := apitools.Resolve("core/v3","{{ $typename }}")
	if err == nil {
		t.Fatal("expected non-nil error")
	}
	if got, want := err.Error(), `"{{ $typename }}" is not a Resource`; got != want {
		t.Fatalf("unexpected error: %s", err)
	}
}
{{ end }}
