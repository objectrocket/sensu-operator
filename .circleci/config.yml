version: 2.1

references:
  platform-docker: &docker
    docker:
    - image: objectrocket/platform-cicd:latest
      auth:
        username: ${DOCKER_USERNAME}
        password: ${DOCKER_PASSWORD}
  context-to-use: &context-to-use
    context: objectrocket-shared
  objectrocket-docker-auth:
    auth:
      username: ${DOCKER_USERNAME}
      password: ${DOCKER_PASSWORD}
  update-clusters: &update-clusters
    <<: *docker
    environment:
      ENV: SCRATCHPAD
      CHARTSDIR: helm
    steps:
    - add_ssh_keys:
        fingerprints:
        - 69:52:7a:2e:29:b7:ba:aa:5e:59:98:14:f9:8b:d4:ae
    - checkout
    - run:
        name: update update-clusters
        command: ~/ci-scripts/update-clusters.sh

orbs:
  ms_teams_notification: pay-justice/ms-teams-webhooks@0.0.1
jobs:
  markdownlint:
    docker:
    - image: circleci/node:10.14.2
      auth:
        username: ${DOCKER_USERNAME}
        password: ${DOCKER_PASSWORD}
    steps:
    - checkout
    - run:
        name: install markdownlint
        command: |
          sudo npm install -g markdownlint-cli
          markdownlint --version
    - run:
        name: lint README.md
        command: markdownlint --config .markdownlint.json README.md
  build:
    docker:
    - image: circleci/golang:1.16
      auth:
        username: ${DOCKER_USERNAME}
        password: ${DOCKER_PASSWORD}
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Build the server binary and docker image
        command: make docker-build IMAGE_VERSION=latest
  unit_test:
    docker:
    - image: circleci/golang:1.16
      auth:
        username: ${DOCKER_USERNAME}
        password: ${DOCKER_PASSWORD}
    steps:
    - checkout
    - run:
        name: go tests
        command: make unittest
  build_deploy:
    docker:
    - image: circleci/golang:1.16
      auth:
        username: ${DOCKER_USERNAME}
        password: ${DOCKER_PASSWORD}
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: docker login
        command: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - run:
        name: docker build and push
        command: |
          make docker-push IMAGE_VERSION=${CIRCLE_TAG}
  helm_push:
    <<: *docker
    environment:
      CHARTSDIR: helm
    steps:
    - checkout
    - run:
        name: Push to S3
        command: ~/ci-scripts/helm_push.sh

  create-release:
    <<: *docker
    steps:
    - add_ssh_keys:
        fingerprints:
        - 16:d0:e3:56:a6:14:8c:7d:dd:94:65:f3:3e:dc:7e:0e
    - checkout
    - run:
        name: create new release
        command: |
          ~/ci-scripts/release-it.sh

  update-dev-clusters:
    <<: *update-clusters
    environment:
      ENV: SCRATCHPAD

  update-stage-clusters:
    <<: *update-clusters
    environment:
      ENV: LEAPPAD

  update-prod-clusters:
    <<: *update-clusters
    environment:
      ENV: LAUNCHPAD

  approval-notification:
    docker:
    - image: cimg/base:2020.01
      auth:
        username: ${DOCKER_USERNAME}
        password: ${DOCKER_PASSWORD}
    steps:
    - checkout
    - run:
        name: Trigger Success
        command: exit 0
    - ms_teams_notification/send_simple_card:
        webhook_url: ${MS_TEAMS_WEBHOOK_URL}
        title: Approval Needed
        text: >-
          Approval needed to deploy
          [${CIRCLE_PROJECT_REPONAME}/${CIRCLE_SHA1:0:7}](https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commit/${CIRCLE_SHA1})
          tagged as $CIRCLE_TAG,

          Click Here to Approve: [${CIRCLE_BUILD_NUM}](https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID})
workflows:
  version: 2
  # runs on all commits
  build_and_test:
    jobs:
    - markdownlint:
        context: platform-eng
        filters:
          branches:
            ignore: master
    - unit_test:
        context: platform-eng
        filters:
          branches:
            ignore: master
    - build:
        context: platform-eng
        filters:
          branches:
            ignore: master
  release:
    jobs:
    - create-release:
        context: platform-eng
        filters:
          branches:
            only: master

  deploy:
    jobs:
    - build_deploy:
        context:
          - docker-push
        filters:
          tags:
            only:
            - /^[0-9]+.[0-9]+.[0-9]+$/
            - /^[0-9]+.[0-9]+.[0-9]+-rc[0-9]+$/
          branches:
            ignore: /.*/
    - helm_push:
        context: 
          - helm-s3-push
          - docker-readonly
          - github-read
        requires:
        - build_deploy
        filters:
          tags:
            only:
            - /^[0-9]+.[0-9]+.[0-9]+$/
            - /^[0-9]+.[0-9]+.[0-9]+-rc[0-9]+$/
          branches:
            ignore: /.*/
    - update-dev-clusters:
        context: platform-eng
        requires:
        - helm_push
        filters:
          tags:
            only:
            - /^[0-9]+.[0-9]+.[0-9]+$/
          branches:
            ignore: /.*/
    - update-stage-clusters:
        context: platform-eng
        requires:
        - update-dev-clusters
        filters:
          tags:
            only:
            - /^[0-9]+.[0-9]+.[0-9]+$/
          branches:
            ignore: /.*/
    - approval-notification:
        context: platform-eng
        requires:
        - update-stage-clusters
        filters:
          tags:
            only:
            - /^v*[0-9]+.[0-9]+.[0-9]+$/
          branches:
            ignore: /.*/
    - hold:   # <<< A job that will require manual approval in the CircleCI web application.
        <<: *context-to-use
        type: approval   # <<< This key-value pair will set your workflow to a status of "On Hold"
        requires:   # We only run the "hold" job when stage update has succeeded
        - update-stage-clusters
        filters:
          tags:
            only:
            - /^[0-9]+.[0-9]+.[0-9]+$/
          branches:
            ignore: /.*/
    - update-prod-clusters:
        context: platform-eng
        requires:
        - hold
        filters:
          tags:
            only:
            - /^[0-9]+.[0-9]+.[0-9]+$/
          branches:
            ignore: /.*/
