/*
Copyright 2024 The sensu-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	objectrocketv1beta1 "github.com/objectrocket/sensu-operator/pkg/apis/objectrocket/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SensuEventFilterLister helps list SensuEventFilters.
// All objects returned here must be treated as read-only.
type SensuEventFilterLister interface {
	// List lists all SensuEventFilters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*objectrocketv1beta1.SensuEventFilter, err error)
	// SensuEventFilters returns an object that can list and get SensuEventFilters.
	SensuEventFilters(namespace string) SensuEventFilterNamespaceLister
	SensuEventFilterListerExpansion
}

// sensuEventFilterLister implements the SensuEventFilterLister interface.
type sensuEventFilterLister struct {
	listers.ResourceIndexer[*objectrocketv1beta1.SensuEventFilter]
}

// NewSensuEventFilterLister returns a new SensuEventFilterLister.
func NewSensuEventFilterLister(indexer cache.Indexer) SensuEventFilterLister {
	return &sensuEventFilterLister{listers.New[*objectrocketv1beta1.SensuEventFilter](indexer, objectrocketv1beta1.Resource("sensueventfilter"))}
}

// SensuEventFilters returns an object that can list and get SensuEventFilters.
func (s *sensuEventFilterLister) SensuEventFilters(namespace string) SensuEventFilterNamespaceLister {
	return sensuEventFilterNamespaceLister{listers.NewNamespaced[*objectrocketv1beta1.SensuEventFilter](s.ResourceIndexer, namespace)}
}

// SensuEventFilterNamespaceLister helps list and get SensuEventFilters.
// All objects returned here must be treated as read-only.
type SensuEventFilterNamespaceLister interface {
	// List lists all SensuEventFilters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*objectrocketv1beta1.SensuEventFilter, err error)
	// Get retrieves the SensuEventFilter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*objectrocketv1beta1.SensuEventFilter, error)
	SensuEventFilterNamespaceListerExpansion
}

// sensuEventFilterNamespaceLister implements the SensuEventFilterNamespaceLister
// interface.
type sensuEventFilterNamespaceLister struct {
	listers.ResourceIndexer[*objectrocketv1beta1.SensuEventFilter]
}
