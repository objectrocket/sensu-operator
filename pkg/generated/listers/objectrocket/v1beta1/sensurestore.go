/*
Copyright 2024 The sensu-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	objectrocketv1beta1 "github.com/objectrocket/sensu-operator/pkg/apis/objectrocket/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SensuRestoreLister helps list SensuRestores.
// All objects returned here must be treated as read-only.
type SensuRestoreLister interface {
	// List lists all SensuRestores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*objectrocketv1beta1.SensuRestore, err error)
	// SensuRestores returns an object that can list and get SensuRestores.
	SensuRestores(namespace string) SensuRestoreNamespaceLister
	SensuRestoreListerExpansion
}

// sensuRestoreLister implements the SensuRestoreLister interface.
type sensuRestoreLister struct {
	listers.ResourceIndexer[*objectrocketv1beta1.SensuRestore]
}

// NewSensuRestoreLister returns a new SensuRestoreLister.
func NewSensuRestoreLister(indexer cache.Indexer) SensuRestoreLister {
	return &sensuRestoreLister{listers.New[*objectrocketv1beta1.SensuRestore](indexer, objectrocketv1beta1.Resource("sensurestore"))}
}

// SensuRestores returns an object that can list and get SensuRestores.
func (s *sensuRestoreLister) SensuRestores(namespace string) SensuRestoreNamespaceLister {
	return sensuRestoreNamespaceLister{listers.NewNamespaced[*objectrocketv1beta1.SensuRestore](s.ResourceIndexer, namespace)}
}

// SensuRestoreNamespaceLister helps list and get SensuRestores.
// All objects returned here must be treated as read-only.
type SensuRestoreNamespaceLister interface {
	// List lists all SensuRestores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*objectrocketv1beta1.SensuRestore, err error)
	// Get retrieves the SensuRestore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*objectrocketv1beta1.SensuRestore, error)
	SensuRestoreNamespaceListerExpansion
}

// sensuRestoreNamespaceLister implements the SensuRestoreNamespaceLister
// interface.
type sensuRestoreNamespaceLister struct {
	listers.ResourceIndexer[*objectrocketv1beta1.SensuRestore]
}
