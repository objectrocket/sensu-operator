/*
Copyright 2018 The sensu-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/objectrocket/sensu-operator/pkg/apis/objectrocket/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CheckConfigLister helps list CheckConfigs.
type CheckConfigLister interface {
	// List lists all CheckConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.CheckConfig, err error)
	// CheckConfigs returns an object that can list and get CheckConfigs.
	CheckConfigs(namespace string) CheckConfigNamespaceLister
	CheckConfigListerExpansion
}

// checkConfigLister implements the CheckConfigLister interface.
type checkConfigLister struct {
	indexer cache.Indexer
}

// NewCheckConfigLister returns a new CheckConfigLister.
func NewCheckConfigLister(indexer cache.Indexer) CheckConfigLister {
	return &checkConfigLister{indexer: indexer}
}

// List lists all CheckConfigs in the indexer.
func (s *checkConfigLister) List(selector labels.Selector) (ret []*v1beta1.CheckConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.CheckConfig))
	})
	return ret, err
}

// CheckConfigs returns an object that can list and get CheckConfigs.
func (s *checkConfigLister) CheckConfigs(namespace string) CheckConfigNamespaceLister {
	return checkConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CheckConfigNamespaceLister helps list and get CheckConfigs.
type CheckConfigNamespaceLister interface {
	// List lists all CheckConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.CheckConfig, err error)
	// Get retrieves the CheckConfig from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.CheckConfig, error)
	CheckConfigNamespaceListerExpansion
}

// checkConfigNamespaceLister implements the CheckConfigNamespaceLister
// interface.
type checkConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CheckConfigs in the indexer for a given namespace.
func (s checkConfigNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.CheckConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.CheckConfig))
	})
	return ret, err
}

// Get retrieves the CheckConfig from the indexer for a given namespace and name.
func (s checkConfigNamespaceLister) Get(name string) (*v1beta1.CheckConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("checkconfig"), name)
	}
	return obj.(*v1beta1.CheckConfig), nil
}
