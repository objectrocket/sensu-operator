/*
Copyright 2024 The sensu-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	objectrocketv1beta1 "github.com/objectrocket/sensu-operator/pkg/apis/objectrocket/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SensuAssetLister helps list SensuAssets.
// All objects returned here must be treated as read-only.
type SensuAssetLister interface {
	// List lists all SensuAssets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*objectrocketv1beta1.SensuAsset, err error)
	// SensuAssets returns an object that can list and get SensuAssets.
	SensuAssets(namespace string) SensuAssetNamespaceLister
	SensuAssetListerExpansion
}

// sensuAssetLister implements the SensuAssetLister interface.
type sensuAssetLister struct {
	listers.ResourceIndexer[*objectrocketv1beta1.SensuAsset]
}

// NewSensuAssetLister returns a new SensuAssetLister.
func NewSensuAssetLister(indexer cache.Indexer) SensuAssetLister {
	return &sensuAssetLister{listers.New[*objectrocketv1beta1.SensuAsset](indexer, objectrocketv1beta1.Resource("sensuasset"))}
}

// SensuAssets returns an object that can list and get SensuAssets.
func (s *sensuAssetLister) SensuAssets(namespace string) SensuAssetNamespaceLister {
	return sensuAssetNamespaceLister{listers.NewNamespaced[*objectrocketv1beta1.SensuAsset](s.ResourceIndexer, namespace)}
}

// SensuAssetNamespaceLister helps list and get SensuAssets.
// All objects returned here must be treated as read-only.
type SensuAssetNamespaceLister interface {
	// List lists all SensuAssets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*objectrocketv1beta1.SensuAsset, err error)
	// Get retrieves the SensuAsset from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*objectrocketv1beta1.SensuAsset, error)
	SensuAssetNamespaceListerExpansion
}

// sensuAssetNamespaceLister implements the SensuAssetNamespaceLister
// interface.
type sensuAssetNamespaceLister struct {
	listers.ResourceIndexer[*objectrocketv1beta1.SensuAsset]
}
