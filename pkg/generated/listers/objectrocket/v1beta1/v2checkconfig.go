/*
Copyright 2019 The sensu-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/objectrocket/sensu-operator/pkg/apis/objectrocket/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// V2CheckConfigLister helps list V2CheckConfigs.
type V2CheckConfigLister interface {
	// List lists all V2CheckConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.V2CheckConfig, err error)
	// V2CheckConfigs returns an object that can list and get V2CheckConfigs.
	V2CheckConfigs(namespace string) V2CheckConfigNamespaceLister
	V2CheckConfigListerExpansion
}

// v2CheckConfigLister implements the V2CheckConfigLister interface.
type v2CheckConfigLister struct {
	indexer cache.Indexer
}

// NewV2CheckConfigLister returns a new V2CheckConfigLister.
func NewV2CheckConfigLister(indexer cache.Indexer) V2CheckConfigLister {
	return &v2CheckConfigLister{indexer: indexer}
}

// List lists all V2CheckConfigs in the indexer.
func (s *v2CheckConfigLister) List(selector labels.Selector) (ret []*v1beta1.V2CheckConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.V2CheckConfig))
	})
	return ret, err
}

// V2CheckConfigs returns an object that can list and get V2CheckConfigs.
func (s *v2CheckConfigLister) V2CheckConfigs(namespace string) V2CheckConfigNamespaceLister {
	return v2CheckConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// V2CheckConfigNamespaceLister helps list and get V2CheckConfigs.
type V2CheckConfigNamespaceLister interface {
	// List lists all V2CheckConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.V2CheckConfig, err error)
	// Get retrieves the V2CheckConfig from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.V2CheckConfig, error)
	V2CheckConfigNamespaceListerExpansion
}

// v2CheckConfigNamespaceLister implements the V2CheckConfigNamespaceLister
// interface.
type v2CheckConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all V2CheckConfigs in the indexer for a given namespace.
func (s v2CheckConfigNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.V2CheckConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.V2CheckConfig))
	})
	return ret, err
}

// Get retrieves the V2CheckConfig from the indexer for a given namespace and name.
func (s v2CheckConfigNamespaceLister) Get(name string) (*v1beta1.V2CheckConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("v2checkconfig"), name)
	}
	return obj.(*v1beta1.V2CheckConfig), nil
}
